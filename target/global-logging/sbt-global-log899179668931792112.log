[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.4 (Oracle Corporation Java 1.8.0_251)
[debug] Load.defaultLoad until apply took 2.9551ms
[debug]           Load.loadUnit: plugins took 56.8303ms
[debug]           Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\bijum\IdeaProjects\sparkproject\project
[debug]             Load.loadUnit: mkEval took 0.2023ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9904 ms
[info] loading settings for project sparkproject-build from idea.sbt ...
[debug]               Load.resolveProject(sparkproject-build) took 1.5075ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkproject-build, base: C:\Users\bijum\IdeaProjects\sparkproject\project, plugins: List(<none>))) took 2.8208ms
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject\project, returning: (sparkproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 23.984ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.037ms
[debug]         Load.loadUnit(file:/C:/Users/bijum/IdeaProjects/sparkproject/project/, ...) took 82.5881ms
[debug]       Load.apply: load took 83.9754ms
[debug]       Load.apply: resolveProjects took 0.1442ms
[debug]       Load.apply: finalTransforms took 5.9428ms
[debug]       Load.apply: config.delegates took 0.2272ms
[debug]       Load.apply: Def.make(settings)... took 34.723ms
[debug]       Load.apply: structureIndex took 9.6315ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\bijum\IdeaProjects\sparkproject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 274.9054ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\bijum\IdeaProjects\sparkproject
[debug]       Load.loadUnit: mkEval took 0.1863ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.8717 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.6969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\bijum\IdeaProjects\sparkproject, plugins: List(<none>))) took 22.909ms
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 530.978ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.1212ms
[debug]   Load.loadUnit(file:/C:/Users/bijum/IdeaProjects/sparkproject/, ...) took 809.541ms
[debug] Load.apply: load took 810.6254ms
[debug] Load.apply: resolveProjects took 0.1907ms
[debug] Load.apply: finalTransforms took 11.447ms
[debug] Load.apply: config.delegates took 0.2024ms
[debug] Load.apply: Def.make(settings)... took 35.1276ms
[debug] Load.apply: structureIndex took 12.434ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to perfect (in build file:/C:/Users/bijum/IdeaProjects/sparkproject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
