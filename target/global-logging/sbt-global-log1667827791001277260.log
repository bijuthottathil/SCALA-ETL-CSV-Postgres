[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.4 (Oracle Corporation Java 1.8.0_251)
[debug] Load.defaultLoad until apply took 2.1817ms
[debug]           Load.loadUnit: plugins took 24.1528ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\bijum\IdeaProjects\sparkproject\project
[debug]             Load.loadUnit: mkEval took 0.3654ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7338 ms
[info] loading settings for project sparkproject-build from idea.sbt ...
[debug]               Load.resolveProject(sparkproject-build) took 3.2929ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkproject-build, base: C:\Users\bijum\IdeaProjects\sparkproject\project, plugins: List(<none>))) took 4.3432ms
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject\project, returning: (sparkproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 27.2037ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.0608ms
[debug]         Load.loadUnit(file:/C:/Users/bijum/IdeaProjects/sparkproject/project/, ...) took 53.2651ms
[debug]       Load.apply: load took 54.2337ms
[debug]       Load.apply: resolveProjects took 0.0814ms
[debug]       Load.apply: finalTransforms took 6.2061ms
[debug]       Load.apply: config.delegates took 0.2857ms
[debug]       Load.apply: Def.make(settings)... took 51.6355ms
[debug]       Load.apply: structureIndex took 16.8137ms
[debug]       Load.apply: mkStreams took 0.0055ms
[info] loading project definition from C:\Users\bijum\IdeaProjects\sparkproject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug]     Load.loadUnit: plugins took 592.3074ms
[debug]     Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\bijum\IdeaProjects\sparkproject
[debug]       Load.loadUnit: mkEval took 0.3219ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2836 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.5076ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\bijum\IdeaProjects\sparkproject, plugins: List(<none>))) took 31.2118ms
[debug] [Loading] Done in C:\Users\bijum\IdeaProjects\sparkproject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 368.441ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.8363ms
[debug]   Load.loadUnit(file:/C:/Users/bijum/IdeaProjects/sparkproject/, ...) took 964.501ms
[debug] Load.apply: load took 965.7025ms
[debug] Load.apply: resolveProjects took 0.0968ms
[debug] Load.apply: finalTransforms took 18.0419ms
[debug] Load.apply: config.delegates took 0.313ms
[debug] Load.apply: Def.make(settings)... took 46.8609ms
[debug] Load.apply: structureIndex took 15.1122ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to perfect (in build file:/C:/Users/bijum/IdeaProjects/sparkproject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
